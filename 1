12.13 INFO: pip is looking at multiple versions of google-cloud-bigquery to determine which version is compatible with other requirements. This could take a while.
12.14 ERROR: Cannot install -r requirements.txt (line 40), -r requirements.txt (line 48) and google-api-core==2.8.2 because these package versions have conflicting dependencies.
12.14 ERROR: ResolutionImpossible: for help visit https://pip.pypa.io/en/latest/topics/dependency-resolution/#dealing-with-dependency-conflicts
12.14
12.14 The conflict is caused by:
12.14     The user requested google-api-core==2.8.2
12.14     google-api-python-client 2.55.0 depends on google-api-core!=2.0.*, !=2.1.*, !=2.2.*, !=2.3.0, <3.0.0dev and >=1.31.5
12.14     google-cloud-bigquery 3.24.0 depends on google-api-core!=2.0.*, !=2.1.*, !=2.10.*, !=2.2.*, !=2.3.*, !=2.4.*, !=2.5.*, !=2.6.*, !=2.7.*, !=2.8.*, !=2.9.*, <3.0.0dev and >=1.34.1
12.14
12.14 To fix this you could try to:
12.14 1. loosen the range of package versions you've specified
12.14 2. remove package versions to allow pip to attempt to solve the dependency conflict
12.14
------

 6 warnings found (use --debug to expand):
 - MaintainerDeprecated: Maintainer instruction is deprecated in favor of using label (line 3)
 - LegacyKeyValueFormat: "ENV key=value" should be used instead of legacy "ENV key value" format (line 58)
 - LegacyKeyValueFormat: "ENV key=value" should be used instead of legacy "ENV key value" format (line 60)
 - LegacyKeyValueFormat: "ENV key=value" should be used instead of legacy "ENV key value" format (line 61)
 - LegacyKeyValueFormat: "ENV key=value" should be used instead of legacy "ENV key value" format (line 62)
 - LegacyKeyValueFormat: "ENV key=value" should be used instead of legacy "ENV key value" format (line 63)
Dockerfile:54
--------------------
  52 |     COPY . /var/opt
  53 |
  54 | >>> RUN python3 -m pip install --upgrade pip && pip install -r requirements.txt
  55 |
  56 |     # Change to non-root privilege
--------------------
ERROR: failed to solve: process "/bin/sh -c python3 -m pip install --upgrade pip && pip install -r requirements.txt" did not complete successfully: exit code: 1
root@opexwise-ui-demo:~/api#
root@opexwise-ui-demo:~/api#
root@opexwise-ui-demo:~/api#
FROM ubuntu:20.04

MAINTAINER Raghu T  <raghu.t@iopex.com>

# Application env variables

# Add a new user "iopex" with user id 3333
RUN useradd -ms /bin/bash -u 3333 iopex

# Install dependencies
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    vim \
    wget \
    curl \
    python3 \
    python3-dev \
    python3-pip \
    libmysqlclient-dev \
    python3-pymysql \
    libleptonica-dev \
    python3-unidecode \
    language-pack-en \
    nginx \
    python3-setuptools python3-opencv poppler-utils libssl-dev \
    python python-dev supervisor \
    gnupg2 \
    cron \
    openssl \
    #wkhtmltopdf \
    ca-certificates

RUN wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb

RUN apt install -y ./wkhtmltox_0.12.6-1.focal_amd64.deb

RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -

RUN curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list

RUN apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17

RUN apt-get update && apt-get install -y unixodbc-dev

RUN apt-get update && apt-get install -y python3-dev libmysqlclient-dev

WORKDIR /var/opt

COPY . /var/opt

RUN python3 -m pip install --upgrade pip && pip install -r requirements.txt

# Change to non-root privilege
# USER iopex
ENV MANUAL_EMAIL mail.test2@iopex.com

ENV MANUAL_EMAIL_HOST mail2.iopex.com
ENV MANUAL_EMAIL_PORT 587
ENV MANUAL_EMAIL_HOST_USER mail.test2@iopex.com
ENV MANUAL_EMAIL_HOST_PASSWORD iopex@123

RUN rm -rf /var/opt/media

RUN rm -rf /var/opt/db_data

RUN mkdir media

RUN mkdir /var/opt/media/log

RUN mkdir /var/opt/media/sample

ADD ./media/sample/* /var/opt/media/sample/

RUN mv -f /var/opt/opexwise/settings.py.dist /var/opt/opexwise/settings.py

RUN export LC_ALL="en_US.UTF-8"

RUN mkdir -p /etc/uwsgi/sites

RUN mkdir /etc/uwsgi/vassals

RUN ln -s /var/opt/opexwise.ini /etc/uwsgi/vassals/

RUN mv -f /var/opt/nginx/default /etc/nginx/sites-available/

RUN echo "daemon off;" >> /etc/nginx/nginx.conf

# Change to executeable mode
RUN chmod a+x /var/opt/background.sh
RUN chmod a+x /var/opt/start.sh

# Add cron file
COPY opexwise-cron /etc/cron.d/opexwise-cron

EXPOSE 80

HEALTHCHECK CMD (pgrep -f nginx | pgrep -f background.sh) || exit 1

ENTRYPOINT ["./start.sh"]
root@opexwise-ui-demo:~/api#

root@opexwise-ui-demo:~/api#
root@opexwise-ui-demo:~/api#
